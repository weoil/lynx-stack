name: Deploy

on:
  push:
    branches: [
      "main",
      "release/*",
    ]

env:
  CI: 1
  TURBO_TELEMETRY_DISABLED: 1
  GITHUB_BASE_REF: ${{ github.base_ref }}
  GITHUB_HEAD_REF: ${{ github.head_ref }}
  GITHUB_REF: ${{ github.ref }}
  NPM_CONFIG_PROVENANCE: true
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'lynx-family/lynx-stack'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
        with:
          target: wasm32-unknown-unknown
          cache: false
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22"
      - name: Install
        run: |
          npm install -g corepack@latest
          corepack enable && corepack prepare
          corepack pnpm install --frozen-lockfile
      - name: build
        run: |
          corepack pnpm turbo --filter !@lynx-js/web-tests build --summarize
      - name: Save Turbo Result
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: deploy-${{ github.sha }}
          path: .turbo
          if-no-files-found: error
          retention-days: 1
          overwrite: true
          include-hidden-files: true
  # We make a build here to make sure cache works for pull requests
  # See: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache
  build-all:
    concurrency:
      group: ${{ github.workflow }}-build-${{ github.ref }}
      cancel-in-progress: true
    uses: ./.github/workflows/workflow-build.yml
    if: github.repository == 'lynx-family/lynx-stack'
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  benchmark:
    needs: build-all
    uses: ./.github/workflows/workflow-bench.yml
  bundle-analysis:
    permissions: {}
    needs: build-all
    uses: ./.github/workflows/workflow-bundle-analysis.yml
    if: github.repository == 'lynx-family/lynx-stack'
  coverage:
    needs: build-all
    uses: ./.github/workflows/workflow-test.yml
    if: github.repository == 'lynx-family/lynx-stack'
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    with:
      runs-on: lynx-ubuntu-24.04-medium
      run: >
        pnpm run test
        --test-timeout=50000
        --reporter=dot
        --reporter=junit
        --outputFile=test-report.junit.xml
        --coverage
        --no-cache
        --logHeapUsage
        --silent
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.repository == 'lynx-family/lynx-stack'
    concurrency:
      group: ${{ github.workflow }}-publish-${{ github.ref }}
      cancel-in-progress: false
    environment: main branch
    permissions:
      contents: write
      pull-requests: write
      statuses: read
      # `id-token: write` is required for npm provenance
      # See: https://docs.npmjs.com/generating-provenance-statements#publishing-packages-with-provenance-via-github-actions
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"
      - name: Install
        run: |
          npm install -g corepack@latest
          corepack enable && corepack prepare
          corepack pnpm install --frozen-lockfile
      - name: Download Turbo Cache
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        timeout-minutes: 5
        with:
          name: deploy-${{ github.sha }}
          path: .turbo
      - name: build
        run: |
          corepack pnpm turbo --filter !@lynx-js/web-tests build --summarize
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y-%m-%d %H:%M:%S')"
      - name: attempt to release
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          publish: pnpm changeset publish
          title: "chore: Release ${{ steps.date.outputs.date }}"

  canary-publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.repository == 'lynx-family/lynx-stack'
    environment: main branch
    permissions:
      contents: read
      pull-requests: read
      statuses: read
      # `id-token: write` is required for npm provenance
      # See: https://docs.npmjs.com/generating-provenance-statements#publishing-packages-with-provenance-via-github-actions
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"
      - name: Install
        run: |
          npm install -g corepack@latest
          corepack enable && corepack prepare
          corepack pnpm install --frozen-lockfile
      - name: Download Turbo Cache
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        timeout-minutes: 5
        with:
          name: deploy-${{ github.sha }}
          path: .turbo
      - name: build
        run: |
          corepack pnpm turbo --filter !@lynx-js/web-tests build --summarize
      - name: version canary packages
        env:
          # changesets-changelog-github requires a GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm changeset version --snapshot canary
          node packages/tools/canary-release/snapshot.js
      - name: publish canary packages
        run: |
          pnpm --recursive publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  website-build:
    needs: build-all
    if: github.repository == 'lynx-family/lynx-stack'
    uses: ./.github/workflows/workflow-website.yml
  website-deploy:
    needs: website-build
    if: github.repository == 'lynx-family/lynx-stack'
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
